import { Expression, STATE_STATEMENT_ENDED } from "../core";

export let CaseExpression = function(){
	/**
	 * case 表达式
	 * @param {Context} context - 语法标签上下文
	 */
	return class CaseExpression extends Expression {
		/**
		 * 冒号分隔符上下文
		 * @type {Context}
		 */
		separator = null;

		/**
		 * case 相关语句块
		 * @type {Statements}
		 */
		statements = null;

		/**
		 * 条件值
		 * @type {Expression}
		 */
		value = null;

		/**
		 * 提取表达式文本内容
		 * @param {ContentBuilder} contentBuilder - 内容存储列表
		 * @returns {void}
		 */
		extractTo(contentBuilder){
			// 添加 case 关键字
			contentBuilder.appendContext(this.context);
			// 添加空格
			contentBuilder.appendSpace();
			// 提取 value
			this.value.extractTo(contentBuilder);
			// 添加冒号
			contentBuilder.appendContext(this.separator);
			// 提取 case 语句块
			this.statements.extractTo(contentBuilder);
		};
		
		/**
		 * 获取状态
		 * @returns {Number}
		 */
		get state(){
			return STATE_STATEMENT_ENDED;
		};

		/**
		 * 设置状态
		 * @param {Number} value - 状态
		 * @returns {Number}
		 */
		set state(value){};
	};
}();